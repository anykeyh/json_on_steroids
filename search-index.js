crystal_doc_search_index_callback({"repository_name":"json_on_steroids","body":"# JSON::OnSteroids\n\n[![Build Status](https://travis-ci.org/anykeyh/json_on_steroids.svg)](https://travis-ci.org/anykeyh/json_on_steroids/)\n[![API Docs](https://img.shields.io/badge/docs-available-brightgreen.svg)](https://anykeyh.github.io/json_on_steroids/)\n\n## Description\n\n`json_on_steroids` provides powerful JSON document transformation and edition\nwith some advanced features to navigate through the keys.\n\nBasically, it can be seen as a `JSON::Any` object on steroid.\n\nThe current Crystal stdlib JSON implementation is made of immutable structures.\nWhile being performant, it turns out dealing with JSON blob with a fully typed language can be really painful.\n\nTransforming JSON to hash or array is often not enough and lead to obscure type errors and ninja type castings.\n\n`JSON::OnSteroids` trades some performance to offers functionalities:\n\n- Mutate or construct from zero a JSON schema easily\n- Pass Hash, Array, NamedTuple etc... as parameters of keys without hassle\n- Check whether a schema is dirty (has changed) or not\n- Errors telling you what key/sub-schema is wrong at runtime\n- Out of the box support of `Time`, which happens to be common in JSON\n- Interface well with PostgreSQL's JSONB column and [Clear ORM](https://github.com/anykeyh/clear)\n\n## Example\n\n### Build a JSON::OnSteroids structure:\n\n```crystal\n  # build from scratch (empty object `{}`)\n  json = JSON::OnSteroids.new\n\n  # build from initial json\n  json = JSON.parse(%<{\"a\": 1, \"b\": 2}>).on_steroids!\n  json = JSON::OnSteroids.new(JSON.parse(%<{\"a\": 1, \"b\": 2}>))\n\n  # build from initial hash and named tuples:\n  json = JSON::OnSteroids.new a: 1, b: 2\n  json = JSON::OnSteroids.new({\"a\" => 1, \"b\" => 2})\n\n  # build from empty object json\n  json = JSON::OnSteroids.new\n\n  # build array\n  json = JSON::OnSteroids.new [1,2,3]\n\n  # build a value (is it useful?)\n  json = JSON::OnSteroids.new \"a value\"\n```\n\n### Exporting to json\n\n```crystal\n  json.to_json #obvious enough\n```\n\n### Getter / setters\n\nThe API of `JSON::Any` for getters are supported. So, as with `JSON::Any`, you\ncan access to a specific field by using `[]` then casting using `as_xxx` where\n`xxxx` can be `i`, `s`, `b` etc...\n\nBasically, a `JSON::OnSteroids` can be passed wherever a `JSON::Any` object is\nrequired, while it's not true in the other way.\n\n`JSON::OnSteroids` add setters:\n\n```crystal\njson = JSON.parse(%<{\"type\": \"event\", \"type\": \"favorites_numbers\",\"data\": [1,2,3,4] }>).on_steroids!\n\njson[\"data\"][0] = \"Hello\"\n\njson.to_json # => {\"type\": \"event\", \"type\": \"favorites_numbers\",\"data\": [\"Hello\",2,3,4] }\n\n# Automatically import from named tuples, arrays and hashes\n\nfrom_tuple = {\n  type: \"collection\",\n  pages: {\n    count: 3,\n    current: 2,\n    next_page: \"http://myservice/api/collection?page=3\"\n  },\n  data: [\n    { type: \"_user\", id: 1 },\n    { type: \"_user\", id: 2 }\n  ]\n}\n\njson = JSON::OnSteroids.new(from_tuple)\n```\n\n### Digging\n\nDigging allows you to fetch a key in your JSON schema:\n\n```crystal\n  json = JSON.parse(%<{\"type\": \"event\", \"is\": \"favorites_numbers\",\"data\": [1,2,3,4] }>).on_steroids!\n  puts json.dig(\"data.1\").as_i #=> 2\n```\n\nTwo flavors of dig method exists:\n`dig(string)` which throw an error if the key is not found / schema doesn't match and `dig?(string)` which return\n`nil` in case it can't dig (the key doesn't match).\n\n### Set / remove in place\nDigging can be combined with set in place and remove feature:\n\n```crystal\n  json = JSON.parse(%<{\"other\": {\"counter\": 123}}>).on_steroids!\n\n  json.dig(\"other.counter\").set(&.as_i.+(1)) # Add 1 to the counter\n  puts json.to_json # => {\"other\": {\"counter\": 124}}\n\n  json.dig(\"other.counter\").remove\n  puts json.to_json # => {\"other\": {}}\n```\n\n### Introspection\n\n`JSON::OnSteroids` objects are aware of few states:\n- You can reverse traversing by calling `json.parent`\n- How deep they are in the document by calling `json.depth`\n- If they are dirty (e.g. they mutate) by calling `json.dirty?`\n- In case they belongs to a map or an array,\n  which key they are mapped to by calling `json.key`\n- The full path of an element can be found by calling `json.path`\n\n`JSON::OnSteroids` objects can introspect about their mutation state.\n  It also can return the schema with the only mutated elements:\n\n```crystal\n  json = JSON.parse(%<{\"key\": 1, \"other\": {\"counter\": 123}}>).on_steroids!\n\n  json[\"other\"][\"counter\"] = 543\n\n  json.dirty? #=> true\n\n  puts json.dirty_only.to_json # => {\"other\": {\"counter\": 543}}\n```\n\nThis is useful for:\n- Snapshot between your JSON document\n- Merge-able noSQL databases will crunch this in no time \\o/\n\nYou can clean a dirty object by calling `clean!` on it:\n\n```crystal\njson.dirty? # => true\njson.clean! #\njson.dirty? # => false\n```\n\n## Q&A\n\n### Performance tradeoff\n\n`JSON::OnSteroids` works by encapsulating all values in a wrapper class. Performance wise, it\ncreates new object everytime you mutate a value. Moreover, each key keep a reference\nto the parent and a dirty boolean field.\n\nIn term of CPU, it has a small overhead, usually negligible. In terms of memory,\nthe overhead of the wrapper is 17 bytes per fields, array items comprised.\nIt can then become voluminous in case of processing large JSON of few megabytes.\n\nIn case you dealing with very-large JSON or are in a memory-constrainted\nenvironnement, I would recommend you to use data mapping or serialization strategies.\n\n## Interfacing with libraries\n\n### Clear\n\nCurrently, `json_on_steroids` interface with [Clear](https://github.com/anykeyh/clear),\nas that's how I use it.\n\nAdd this optional requirement to use it into clear\n\n```crystal\nrequire \"json_on_steroids/ext/clear\"\n```\n\nNow your jsonb columns are mapped :).\n\n```crystal\n  column jsonb : JSON::OnSteroids\n```\nUsage of `dirty?` allows the edition in place of your json:\n\n```crystal\n  mdl = Model.query.first!\n  mdl.jsonb[\"my\"][\"content\"] = \"is awesome\"\n  mdl.changed? # => true\n  mdl.update_h #=> {\"jsonb\" => JSON::OnSteroids}\n  mdl.save!\n```\n\nIf you want to interface in another ORM or libraries, pull request are welcome !\n\n## Future on this shard\n\nCurrently not implemented but planned:\n\n### Searching\n\n**WIP: Not implemented yet.**\n\nYou can `search` through the document a key responding to a specific rule:\n\n```crystal\nputs \"Events from facebook or google:\"\n\n# search every elements which contains the keys `type` and `provider`:\njson.search(type: \"event\", provider: /^(facebook|google)$/){ |evt|\n  puts evt[\"url\"]\n}\n```\n","program":{"html_id":"json_on_steroids/toplevel","path":"toplevel.html","kind":"module","full_name":"Top Level Namespace","name":"Top Level Namespace","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"json_on_steroids","program":true,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"json_on_steroids/Clear","path":"Clear.html","kind":"module","full_name":"Clear","name":"Clear","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/json_on_steroids/ext/clear.cr","line_number":2,"url":"https://github.com/anykeyh/json_on_steroids/blob/9c43ff02a7c315290ba00a9257a88db0018124d7/src/json_on_steroids/ext/clear.cr#L2"}],"repository_name":"json_on_steroids","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"json_on_steroids/Clear/Model","path":"Clear/Model.html","kind":"module","full_name":"Clear::Model","name":"Model","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/json_on_steroids/ext/clear.cr","line_number":2,"url":"https://github.com/anykeyh/json_on_steroids/blob/9c43ff02a7c315290ba00a9257a88db0018124d7/src/json_on_steroids/ext/clear.cr#L2"}],"repository_name":"json_on_steroids","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"json_on_steroids/Clear","kind":"module","full_name":"Clear","name":"Clear"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"json_on_steroids/Clear/Model/Converter","path":"Clear/Model/Converter.html","kind":"module","full_name":"Clear::Model::Converter","name":"Converter","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/json_on_steroids/ext/clear.cr","line_number":2,"url":"https://github.com/anykeyh/json_on_steroids/blob/9c43ff02a7c315290ba00a9257a88db0018124d7/src/json_on_steroids/ext/clear.cr#L2"}],"repository_name":"json_on_steroids","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"json_on_steroids/Clear/Model","kind":"module","full_name":"Clear::Model","name":"Model"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"json_on_steroids/Clear/Model/Converter/JSON","path":"Clear/Model/Converter/JSON.html","kind":"module","full_name":"Clear::Model::Converter::JSON","name":"JSON","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/json_on_steroids/ext/clear.cr","line_number":2,"url":"https://github.com/anykeyh/json_on_steroids/blob/9c43ff02a7c315290ba00a9257a88db0018124d7/src/json_on_steroids/ext/clear.cr#L2"}],"repository_name":"json_on_steroids","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"json_on_steroids/Clear/Model/Converter","kind":"module","full_name":"Clear::Model::Converter","name":"Converter"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"json_on_steroids/Clear/Model/Converter/JSON/OnSteroidConverter","path":"Clear/Model/Converter/JSON/OnSteroidConverter.html","kind":"module","full_name":"Clear::Model::Converter::JSON::OnSteroidConverter","name":"OnSteroidConverter","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/json_on_steroids/ext/clear.cr","line_number":2,"url":"https://github.com/anykeyh/json_on_steroids/blob/9c43ff02a7c315290ba00a9257a88db0018124d7/src/json_on_steroids/ext/clear.cr#L2"}],"repository_name":"json_on_steroids","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"json_on_steroids/Clear/Model/Converter/JSON","kind":"module","full_name":"Clear::Model::Converter::JSON","name":"JSON"},"doc":null,"summary":null,"class_methods":[{"id":"to_column(x):::JSON::OnSteroid?-class-method","html_id":"to_column(x):::JSON::OnSteroid?-class-method","name":"to_column","doc":null,"summary":null,"abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":""}],"args_string":"(x) : ::JSON::OnSteroid?","args_html":"(x) : ::JSON::OnSteroid?","location":{"filename":"src/json_on_steroids/ext/clear.cr","line_number":3,"url":"https://github.com/anykeyh/json_on_steroids/blob/9c43ff02a7c315290ba00a9257a88db0018124d7/src/json_on_steroids/ext/clear.cr#L3"},"def":{"name":"to_column","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"::JSON::OnSteroid | ::Nil","visibility":"Public","body":"case x\nwhen Nil\n  nil\nwhen ::JSON::Any\n  ::JSON::OnSteroid.new(x)\nelse\n  ::JSON::OnSteroid.new(::JSON.parse(x.to_s))\nend"}},{"id":"to_db(x:::JSON::OnSteroid?)-class-method","html_id":"to_db(x:::JSON::OnSteroid?)-class-method","name":"to_db","doc":null,"summary":null,"abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"::JSON::OnSteroid | ::Nil"}],"args_string":"(x : ::JSON::OnSteroid?)","args_html":"(x : ::JSON::OnSteroid?)","location":{"filename":"src/json_on_steroids/ext/clear.cr","line_number":14,"url":"https://github.com/anykeyh/json_on_steroids/blob/9c43ff02a7c315290ba00a9257a88db0018124d7/src/json_on_steroids/ext/clear.cr#L14"},"def":{"name":"to_db","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"::JSON::OnSteroid | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"x.to_json"}}],"constructors":[],"instance_methods":[],"macros":[],"types":[]}]}]}]}]},{"html_id":"json_on_steroids/JSON","path":"JSON.html","kind":"module","full_name":"JSON","name":"JSON","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/json_on_steroids.cr","line_number":3,"url":"https://github.com/anykeyh/json_on_steroids/blob/9c43ff02a7c315290ba00a9257a88db0018124d7/src/json_on_steroids.cr#L3"}],"repository_name":"json_on_steroids","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":"The JSON module allows parsing and generating [JSON](http://json.org/) documents.\n\n### General type-safe interface\n\nThe general type-safe interface for parsing JSON is to invoke `T.from_json` on a\ntarget type `T` and pass either a `String` or `IO` as an argument.\n\n```\nrequire \"json\"\n\njson_text = %([1, 2, 3])\nArray(Int32).from_json(json_text) # => [1, 2, 3]\n\njson_text = %({\"x\": 1, \"y\": 2})\nHash(String, Int32).from_json(json_text) # => {\"x\" => 1, \"y\" => 2}\n```\n\nSerializing is achieved by invoking `to_json`, which returns a `String`, or\n`to_json(io : IO)`, which will stream the JSON to an `IO`.\n\n```\nrequire \"json\"\n\n[1, 2, 3].to_json            # => \"[1,2,3]\"\n{\"x\" => 1, \"y\" => 2}.to_json # => \"{\\\"x\\\":1,\\\"y\\\":2}\"\n```\n\nMost types in the standard library implement these methods. For user-defined types\nyou can define a `self.new(pull : JSON::PullParser)` for parsing and\n`to_json(builder : JSON::Builder)` for serializing. The following sections\nshow convenient ways to do this using `JSON::Serializable`.\n\nNOTE: JSON object keys are always strings but they can still be parsed\nand deserialized to other types. To deserialize, define a\n`T.from_json_object_key?(key : String) : T?` method, which can return `nil`\nif the string can't be parsed into that type. To serialize, define a\n`to_json_object_key : String` method can be serialized that way.\nAll integer and float types in the standard library can be deserialized that way.\n\n```\nrequire \"json\"\n\njson_text = %({\"1\": 2, \"3\": 4})\nHash(Int32, Int32).from_json(json_text) # => {1 => 2, 3 => 4}\n\n{1.5 => 2}.to_json # => \"{\\\"1.5\\\":2}\"\n```\n\n### Parsing with `JSON.parse`\n\n`JSON.parse` will return an `Any`, which is a convenient wrapper around all possible JSON types,\nmaking it easy to traverse a complex JSON structure but requires some casts from time to time,\nmostly via some method invocations.\n\n```\nrequire \"json\"\n\nvalue = JSON.parse(\"[1, 2, 3]\") # : JSON::Any\n\nvalue[0]              # => 1\ntypeof(value[0])      # => JSON::Any\nvalue[0].as_i         # => 1\ntypeof(value[0].as_i) # => Int32\n\nvalue[0] + 1       # Error, because value[0] is JSON::Any\nvalue[0].as_i + 10 # => 11\n```\n\n`JSON.parse` can read from an `IO` directly (such as a file) which saves\nallocating a string:\n\n```\nrequire \"json\"\n\njson = File.open(\"path/to/file.json\") do |file|\n  JSON.parse(file)\nend\n```\n\nParsing with `JSON.parse` is useful for dealing with a dynamic JSON structure.\n\n### Generating with `JSON.build`\n\nUse `JSON.build`, which uses `JSON::Builder`, to generate JSON\nby emitting scalars, arrays and objects:\n\n```\nrequire \"json\"\n\nstring = JSON.build do |json|\n  json.object do\n    json.field \"name\", \"foo\"\n    json.field \"values\" do\n      json.array do\n        json.number 1\n        json.number 2\n        json.number 3\n      end\n    end\n  end\nend\nstring # => %<{\"name\":\"foo\",\"values\":[1,2,3]}>\n```\n\n### Generating with `to_json`\n\n`to_json`, `to_json(IO)` and `to_json(JSON::Builder)` methods are provided\nfor primitive types, but you need to define `to_json(JSON::Builder)`\nfor custom objects, either manually or using `JSON::Serializable`.","summary":"<p>The JSON module allows parsing and generating <a href=\"http://json.org/\">JSON</a> documents.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"json_on_steroids/JSON/Any","path":"JSON/Any.html","kind":"struct","full_name":"JSON::Any","name":"Any","abstract":false,"superclass":{"html_id":"json_on_steroids/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"json_on_steroids/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"json_on_steroids/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"json_on_steroids/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/json_on_steroids/ext.cr","line_number":1,"url":"https://github.com/anykeyh/json_on_steroids/blob/9c43ff02a7c315290ba00a9257a88db0018124d7/src/json_on_steroids/ext.cr#L1"}],"repository_name":"json_on_steroids","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"json_on_steroids/JSON","kind":"module","full_name":"JSON","name":"JSON"},"doc":"`JSON::Any` is a convenient wrapper around all possible JSON types (`JSON::Any::Type`)\nand can be used for traversing dynamic or unknown JSON structures.\n\n```\nrequire \"json\"\n\nobj = JSON.parse(%({\"access\": [{\"name\": \"mapping\", \"speed\": \"fast\"}, {\"name\": \"any\", \"speed\": \"slow\"}]}))\nobj[\"access\"][1][\"name\"].as_s  # => \"any\"\nobj[\"access\"][1][\"speed\"].as_s # => \"slow\"\n```\n\nNote that methods used to traverse a JSON structure, `#[]` and `#[]?`,\nalways return a `JSON::Any` to allow further traversal. To convert them to `String`,\n`Int32`, etc., use the `as_` methods, such as `#as_s`, `#as_i`, which perform\na type check against the raw underlying value. This means that invoking `#as_s`\nwhen the underlying value is not a String will raise: the value won't automatically\nbe converted (parsed) to a `String`.","summary":"<p><code><a href=\"../JSON/Any.html\">JSON::Any</a></code> is a convenient wrapper around all possible JSON types (<code>JSON::Any::Type</code>) and can be used for traversing dynamic or unknown JSON structures.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"on_steroids!-instance-method","html_id":"on_steroids!-instance-method","name":"on_steroids!","doc":"Convert the current JSON::Any structure into an action movie hero\n\nSee `JSON::OnSteroids` for more informations","summary":"<p>Convert the current JSON::Any structure into an action movie hero</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/json_on_steroids/ext.cr","line_number":5,"url":"https://github.com/anykeyh/json_on_steroids/blob/9c43ff02a7c315290ba00a9257a88db0018124d7/src/json_on_steroids/ext.cr#L5"},"def":{"name":"on_steroids!","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"JSON::OnSteroids.new(self)"}}],"macros":[],"types":[]},{"html_id":"json_on_steroids/JSON/OnSteroids","path":"JSON/OnSteroids.html","kind":"class","full_name":"JSON::OnSteroids","name":"OnSteroids","abstract":false,"superclass":{"html_id":"json_on_steroids/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"json_on_steroids/JSON/OnSteroids/MergeOperations","kind":"module","full_name":"JSON::OnSteroids::MergeOperations","name":"MergeOperations"},{"html_id":"json_on_steroids/JSON/OnSteroids/Dirty","kind":"module","full_name":"JSON::OnSteroids::Dirty","name":"Dirty"},{"html_id":"json_on_steroids/JSON/OnSteroids/InPlace","kind":"module","full_name":"JSON::OnSteroids::InPlace","name":"InPlace"},{"html_id":"json_on_steroids/JSON/OnSteroids/Searchable","kind":"module","full_name":"JSON::OnSteroids::Searchable","name":"Searchable"},{"html_id":"json_on_steroids/JSON/OnSteroids/Access","kind":"module","full_name":"JSON::OnSteroids::Access","name":"Access"},{"html_id":"json_on_steroids/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"json_on_steroids/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/json_on_steroids.cr","line_number":6,"url":"https://github.com/anykeyh/json_on_steroids/blob/9c43ff02a7c315290ba00a9257a88db0018124d7/src/json_on_steroids.cr#L6"},{"filename":"src/json_on_steroids.cr","line_number":13,"url":"https://github.com/anykeyh/json_on_steroids/blob/9c43ff02a7c315290ba00a9257a88db0018124d7/src/json_on_steroids.cr#L13"}],"repository_name":"json_on_steroids","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[{"id":"UTC_ISO_FORMAT","name":"UTC_ISO_FORMAT","value":"\"%FT%T.%LZ\"","doc":null,"summary":null},{"id":"VERSION","name":"VERSION","value":"0.1","doc":null,"summary":null}],"included_modules":[{"html_id":"json_on_steroids/JSON/OnSteroids/Access","kind":"module","full_name":"JSON::OnSteroids::Access","name":"Access"},{"html_id":"json_on_steroids/JSON/OnSteroids/Dirty","kind":"module","full_name":"JSON::OnSteroids::Dirty","name":"Dirty"},{"html_id":"json_on_steroids/JSON/OnSteroids/InPlace","kind":"module","full_name":"JSON::OnSteroids::InPlace","name":"InPlace"},{"html_id":"json_on_steroids/JSON/OnSteroids/MergeOperations","kind":"module","full_name":"JSON::OnSteroids::MergeOperations","name":"MergeOperations"},{"html_id":"json_on_steroids/JSON/OnSteroids/Searchable","kind":"module","full_name":"JSON::OnSteroids::Searchable","name":"Searchable"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"json_on_steroids/JSON","kind":"module","full_name":"JSON","name":"JSON"},"doc":"Handle JSON into a mutable structure, and much more.","summary":"<p>Handle JSON into a mutable structure, and much more.</p>","class_methods":[{"id":"parse(s:String)-class-method","html_id":"parse(s:String)-class-method","name":"parse","doc":null,"summary":null,"abstract":false,"args":[{"name":"s","doc":null,"default_value":"","external_name":"s","restriction":"String"}],"args_string":"(s : String)","args_html":"(s : String)","location":{"filename":"src/json_on_steroids.cr","line_number":193,"url":"https://github.com/anykeyh/json_on_steroids/blob/9c43ff02a7c315290ba00a9257a88db0018124d7/src/json_on_steroids.cr#L193"},"def":{"name":"parse","args":[{"name":"s","doc":null,"default_value":"","external_name":"s","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(JSON.parse(s)).on_steroids!"}}],"constructors":[{"id":"new(container:NamedTuple|Array|Hash,parent=nil,key=nil)-class-method","html_id":"new(container:NamedTuple|Array|Hash,parent=nil,key=nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"container","doc":null,"default_value":"","external_name":"container","restriction":"NamedTuple | Array | Hash"},{"name":"parent","doc":null,"default_value":"nil","external_name":"parent","restriction":""},{"name":"key","doc":null,"default_value":"nil","external_name":"key","restriction":""}],"args_string":"(container : NamedTuple | Array | Hash, parent = <span class=\"n\">nil</span>, key = <span class=\"n\">nil</span>)","args_html":"(container : NamedTuple | Array | Hash, parent = <span class=\"n\">nil</span>, key = <span class=\"n\">nil</span>)","location":{"filename":"src/json_on_steroids.cr","line_number":71,"url":"https://github.com/anykeyh/json_on_steroids/blob/9c43ff02a7c315290ba00a9257a88db0018124d7/src/json_on_steroids.cr#L71"},"def":{"name":"new","args":[{"name":"container","doc":null,"default_value":"","external_name":"container","restriction":"NamedTuple | Array | Hash"},{"name":"parent","doc":null,"default_value":"nil","external_name":"parent","restriction":""},{"name":"key","doc":null,"default_value":"nil","external_name":"key","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(container, parent, key)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(json_any:JSON::OnSteroids,parent=nil,key=nil)-class-method","html_id":"new(json_any:JSON::OnSteroids,parent=nil,key=nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"json_any","doc":null,"default_value":"","external_name":"json_any","restriction":"JSON::OnSteroids"},{"name":"parent","doc":null,"default_value":"nil","external_name":"parent","restriction":""},{"name":"key","doc":null,"default_value":"nil","external_name":"key","restriction":""}],"args_string":"(json_any : JSON::OnSteroids, parent = <span class=\"n\">nil</span>, key = <span class=\"n\">nil</span>)","args_html":"(json_any : <a href=\"../JSON/OnSteroids.html\">JSON::OnSteroids</a>, parent = <span class=\"n\">nil</span>, key = <span class=\"n\">nil</span>)","location":{"filename":"src/json_on_steroids.cr","line_number":75,"url":"https://github.com/anykeyh/json_on_steroids/blob/9c43ff02a7c315290ba00a9257a88db0018124d7/src/json_on_steroids.cr#L75"},"def":{"name":"new","args":[{"name":"json_any","doc":null,"default_value":"","external_name":"json_any","restriction":"JSON::OnSteroids"},{"name":"parent","doc":null,"default_value":"nil","external_name":"parent","restriction":""},{"name":"key","doc":null,"default_value":"nil","external_name":"key","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(json_any, parent, key)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(json_any:JSON::Any,parent=nil,key=nil)-class-method","html_id":"new(json_any:JSON::Any,parent=nil,key=nil)-class-method","name":"new","doc":"Initialize by passing a JSON::Any object","summary":"<p>Initialize by passing a JSON::Any object</p>","abstract":false,"args":[{"name":"json_any","doc":null,"default_value":"","external_name":"json_any","restriction":"JSON::Any"},{"name":"parent","doc":null,"default_value":"nil","external_name":"parent","restriction":""},{"name":"key","doc":null,"default_value":"nil","external_name":"key","restriction":""}],"args_string":"(json_any : JSON::Any, parent = <span class=\"n\">nil</span>, key = <span class=\"n\">nil</span>)","args_html":"(json_any : <a href=\"../JSON/Any.html\">JSON::Any</a>, parent = <span class=\"n\">nil</span>, key = <span class=\"n\">nil</span>)","location":{"filename":"src/json_on_steroids.cr","line_number":81,"url":"https://github.com/anykeyh/json_on_steroids/blob/9c43ff02a7c315290ba00a9257a88db0018124d7/src/json_on_steroids.cr#L81"},"def":{"name":"new","args":[{"name":"json_any","doc":null,"default_value":"","external_name":"json_any","restriction":"JSON::Any"},{"name":"parent","doc":null,"default_value":"nil","external_name":"parent","restriction":""},{"name":"key","doc":null,"default_value":"nil","external_name":"key","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(json_any, parent, key)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(raw:WrappedPrimitive,parent=nil,key=nil)-class-method","html_id":"new(raw:WrappedPrimitive,parent=nil,key=nil)-class-method","name":"new","doc":"Basic initalization with a primitive","summary":"<p>Basic initalization with a primitive</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"WrappedPrimitive"},{"name":"parent","doc":null,"default_value":"nil","external_name":"parent","restriction":""},{"name":"key","doc":null,"default_value":"nil","external_name":"key","restriction":""}],"args_string":"(raw : WrappedPrimitive, parent = <span class=\"n\">nil</span>, key = <span class=\"n\">nil</span>)","args_html":"(raw : <a href=\"../JSON/OnSteroids/WrappedPrimitive.html\">WrappedPrimitive</a>, parent = <span class=\"n\">nil</span>, key = <span class=\"n\">nil</span>)","location":{"filename":"src/json_on_steroids.cr","line_number":103,"url":"https://github.com/anykeyh/json_on_steroids/blob/9c43ff02a7c315290ba00a9257a88db0018124d7/src/json_on_steroids.cr#L103"},"def":{"name":"new","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"WrappedPrimitive"},{"name":"parent","doc":null,"default_value":"nil","external_name":"parent","restriction":""},{"name":"key","doc":null,"default_value":"nil","external_name":"key","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(raw, parent, key)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(**tuple)-class-method","html_id":"new(**tuple)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"(**tuple)","args_html":"(**tuple)","location":{"filename":"src/json_on_steroids.cr","line_number":65,"url":"https://github.com/anykeyh/json_on_steroids/blob/9c43ff02a7c315290ba00a9257a88db0018124d7/src/json_on_steroids.cr#L65"},"def":{"name":"new","args":[],"double_splat":{"name":"tuple","doc":null,"default_value":"","external_name":"tuple","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(**tuple)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"as_arr-instance-method","html_id":"as_arr-instance-method","name":"as_arr","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/json_on_steroids.cr","line_number":107,"url":"https://github.com/anykeyh/json_on_steroids/blob/9c43ff02a7c315290ba00a9257a88db0018124d7/src/json_on_steroids.cr#L107"},"def":{"name":"as_arr","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@raw.as(Array(JSON::OnSteroids))"}},{"id":"as_arr?-instance-method","html_id":"as_arr?-instance-method","name":"as_arr?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/json_on_steroids.cr","line_number":107,"url":"https://github.com/anykeyh/json_on_steroids/blob/9c43ff02a7c315290ba00a9257a88db0018124d7/src/json_on_steroids.cr#L107"},"def":{"name":"as_arr?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@raw.as?(Array(JSON::OnSteroids))"}},{"id":"as_b-instance-method","html_id":"as_b-instance-method","name":"as_b","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/json_on_steroids.cr","line_number":107,"url":"https://github.com/anykeyh/json_on_steroids/blob/9c43ff02a7c315290ba00a9257a88db0018124d7/src/json_on_steroids.cr#L107"},"def":{"name":"as_b","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@raw.as(Bool)"}},{"id":"as_b?-instance-method","html_id":"as_b?-instance-method","name":"as_b?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/json_on_steroids.cr","line_number":107,"url":"https://github.com/anykeyh/json_on_steroids/blob/9c43ff02a7c315290ba00a9257a88db0018124d7/src/json_on_steroids.cr#L107"},"def":{"name":"as_b?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@raw.as?(Bool)"}},{"id":"as_f-instance-method","html_id":"as_f-instance-method","name":"as_f","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/json_on_steroids.cr","line_number":133,"url":"https://github.com/anykeyh/json_on_steroids/blob/9c43ff02a7c315290ba00a9257a88db0018124d7/src/json_on_steroids.cr#L133"},"def":{"name":"as_f","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"as_f64"}},{"id":"as_f32-instance-method","html_id":"as_f32-instance-method","name":"as_f32","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/json_on_steroids.cr","line_number":141,"url":"https://github.com/anykeyh/json_on_steroids/blob/9c43ff02a7c315290ba00a9257a88db0018124d7/src/json_on_steroids.cr#L141"},"def":{"name":"as_f32","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Float32.new(@raw.as(Number))"}},{"id":"as_f64-instance-method","html_id":"as_f64-instance-method","name":"as_f64","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/json_on_steroids.cr","line_number":137,"url":"https://github.com/anykeyh/json_on_steroids/blob/9c43ff02a7c315290ba00a9257a88db0018124d7/src/json_on_steroids.cr#L137"},"def":{"name":"as_f64","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Float64.new(@raw.as(Number))"}},{"id":"as_h-instance-method","html_id":"as_h-instance-method","name":"as_h","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/json_on_steroids.cr","line_number":107,"url":"https://github.com/anykeyh/json_on_steroids/blob/9c43ff02a7c315290ba00a9257a88db0018124d7/src/json_on_steroids.cr#L107"},"def":{"name":"as_h","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@raw.as(Hash(String, JSON::OnSteroids))"}},{"id":"as_h?-instance-method","html_id":"as_h?-instance-method","name":"as_h?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/json_on_steroids.cr","line_number":107,"url":"https://github.com/anykeyh/json_on_steroids/blob/9c43ff02a7c315290ba00a9257a88db0018124d7/src/json_on_steroids.cr#L107"},"def":{"name":"as_h?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@raw.as?(Hash(String, JSON::OnSteroids))"}},{"id":"as_i-instance-method","html_id":"as_i-instance-method","name":"as_i","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/json_on_steroids.cr","line_number":121,"url":"https://github.com/anykeyh/json_on_steroids/blob/9c43ff02a7c315290ba00a9257a88db0018124d7/src/json_on_steroids.cr#L121"},"def":{"name":"as_i","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Int64.new(@raw.as(Number))"}},{"id":"as_i32-instance-method","html_id":"as_i32-instance-method","name":"as_i32","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/json_on_steroids.cr","line_number":129,"url":"https://github.com/anykeyh/json_on_steroids/blob/9c43ff02a7c315290ba00a9257a88db0018124d7/src/json_on_steroids.cr#L129"},"def":{"name":"as_i32","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Int32.new(@raw.as(Number))"}},{"id":"as_i64-instance-method","html_id":"as_i64-instance-method","name":"as_i64","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/json_on_steroids.cr","line_number":125,"url":"https://github.com/anykeyh/json_on_steroids/blob/9c43ff02a7c315290ba00a9257a88db0018124d7/src/json_on_steroids.cr#L125"},"def":{"name":"as_i64","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Int64.new(@raw.as(Number))"}},{"id":"as_nil-instance-method","html_id":"as_nil-instance-method","name":"as_nil","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/json_on_steroids.cr","line_number":107,"url":"https://github.com/anykeyh/json_on_steroids/blob/9c43ff02a7c315290ba00a9257a88db0018124d7/src/json_on_steroids.cr#L107"},"def":{"name":"as_nil","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@raw.as(Nil)"}},{"id":"as_nil?-instance-method","html_id":"as_nil?-instance-method","name":"as_nil?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/json_on_steroids.cr","line_number":107,"url":"https://github.com/anykeyh/json_on_steroids/blob/9c43ff02a7c315290ba00a9257a88db0018124d7/src/json_on_steroids.cr#L107"},"def":{"name":"as_nil?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@raw.as?(Nil)"}},{"id":"as_number?-instance-method","html_id":"as_number?-instance-method","name":"as_number?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/json_on_steroids.cr","line_number":117,"url":"https://github.com/anykeyh/json_on_steroids/blob/9c43ff02a7c315290ba00a9257a88db0018124d7/src/json_on_steroids.cr#L117"},"def":{"name":"as_number?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@raw.as?(Number)"}},{"id":"as_s-instance-method","html_id":"as_s-instance-method","name":"as_s","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/json_on_steroids.cr","line_number":107,"url":"https://github.com/anykeyh/json_on_steroids/blob/9c43ff02a7c315290ba00a9257a88db0018124d7/src/json_on_steroids.cr#L107"},"def":{"name":"as_s","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@raw.as(String)"}},{"id":"as_s?-instance-method","html_id":"as_s?-instance-method","name":"as_s?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/json_on_steroids.cr","line_number":107,"url":"https://github.com/anykeyh/json_on_steroids/blob/9c43ff02a7c315290ba00a9257a88db0018124d7/src/json_on_steroids.cr#L107"},"def":{"name":"as_s?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@raw.as?(String)"}},{"id":"as_t-instance-method","html_id":"as_t-instance-method","name":"as_t","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/json_on_steroids.cr","line_number":153,"url":"https://github.com/anykeyh/json_on_steroids/blob/9c43ff02a7c315290ba00a9257a88db0018124d7/src/json_on_steroids.cr#L153"},"def":{"name":"as_t","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Time.parse(@raw.as_s)"}},{"id":"as_t?-instance-method","html_id":"as_t?-instance-method","name":"as_t?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/json_on_steroids.cr","line_number":145,"url":"https://github.com/anykeyh/json_on_steroids/blob/9c43ff02a7c315290ba00a9257a88db0018124d7/src/json_on_steroids.cr#L145"},"def":{"name":"as_t?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"begin\n  if s = @raw.as_s?\n    Time.parse(s)\n  end\nrescue\n  nil\nend"}},{"id":"inspect(io)-instance-method","html_id":"inspect(io)-instance-method","name":"inspect","doc":null,"summary":null,"abstract":false,"args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":""}],"args_string":"(io)","args_html":"(io)","location":{"filename":"src/json_on_steroids.cr","line_number":201,"url":"https://github.com/anykeyh/json_on_steroids/blob/9c43ff02a7c315290ba00a9257a88db0018124d7/src/json_on_steroids.cr#L201"},"def":{"name":"inspect","args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if @parent\nelse\n  io << \"JSON::OnSteroids(dirty: #{dirty?.inspect})>\"\nend\nto_s(io)\n"}},{"id":"key:Union(String,Int32,Nil)-instance-method","html_id":"key:Union(String,Int32,Nil)-instance-method","name":"key","doc":"Key for this object, if any. String if it belongs to an hash, integer if it belongs to an array\nif the element is root, key is set to nil.","summary":"<p>Key for this object, if any.</p>","abstract":false,"args":[],"args_string":" : Union(String, Int32, Nil)","args_html":" : Union(String, Int32, Nil)","location":{"filename":"src/json_on_steroids.cr","line_number":33,"url":"https://github.com/anykeyh/json_on_steroids/blob/9c43ff02a7c315290ba00a9257a88db0018124d7/src/json_on_steroids.cr#L33"},"def":{"name":"key","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Union(String, Int32, Nil)","visibility":"Public","body":"@key"}},{"id":"parent:JSON::OnSteroids?-instance-method","html_id":"parent:JSON::OnSteroids?-instance-method","name":"parent","doc":"The path to the parent if any","summary":"<p>The path to the parent if any</p>","abstract":false,"args":[],"args_string":" : JSON::OnSteroids?","args_html":" : <a href=\"../JSON/OnSteroids.html\">JSON::OnSteroids</a>?","location":{"filename":"src/json_on_steroids.cr","line_number":29,"url":"https://github.com/anykeyh/json_on_steroids/blob/9c43ff02a7c315290ba00a9257a88db0018124d7/src/json_on_steroids.cr#L29"},"def":{"name":"parent","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"JSON::OnSteroids | ::Nil","visibility":"Public","body":"@parent"}},{"id":"raw:RawWrappedValue-instance-method","html_id":"raw:RawWrappedValue-instance-method","name":"raw","doc":"The raw data stored into this wrapper","summary":"<p>The raw data stored into this wrapper</p>","abstract":false,"args":[],"args_string":" : RawWrappedValue","args_html":" : <a href=\"../JSON/OnSteroids/RawWrappedValue.html\">RawWrappedValue</a>","location":{"filename":"src/json_on_steroids.cr","line_number":26,"url":"https://github.com/anykeyh/json_on_steroids/blob/9c43ff02a7c315290ba00a9257a88db0018124d7/src/json_on_steroids.cr#L26"},"def":{"name":"raw","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"RawWrappedValue","visibility":"Public","body":"@raw"}},{"id":"to_json-instance-method","html_id":"to_json-instance-method","name":"to_json","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/json_on_steroids.cr","line_number":197,"url":"https://github.com/anykeyh/json_on_steroids/blob/9c43ff02a7c315290ba00a9257a88db0018124d7/src/json_on_steroids.cr#L197"},"def":{"name":"to_json","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"to_s"}},{"id":"to_s(io)-instance-method","html_id":"to_s(io)-instance-method","name":"to_s","doc":null,"summary":null,"abstract":false,"args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":""}],"args_string":"(io)","args_html":"(io)","location":{"filename":"src/json_on_steroids.cr","line_number":168,"url":"https://github.com/anykeyh/json_on_steroids/blob/9c43ff02a7c315290ba00a9257a88db0018124d7/src/json_on_steroids.cr#L168"},"def":{"name":"to_s","args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"case raw = @raw\nwhen Hash\n  io << '{'\n  raw.each_with_index do |__arg0, index|\n    k = __arg0[0]\n    v = __arg0[1]\n    if index == 0\n    else\n      io << ','\n    end\n    io << (escape(k))\n    io << ':'\n    v.inspect(io)\n  end\n  io << '}'\nwhen Array\n  io << '['\n  raw.each_with_index do |v, index|\n    if index == 0\n    else\n      io << ','\n    end\n    io << (escape(v))\n  end\n  io << ']'\nwhen Nil\n  io << \"null\"\nelse\n  io << (escape(raw))\nend"}},{"id":"wrap(tuple:NamedTuple)-instance-method","html_id":"wrap(tuple:NamedTuple)-instance-method","name":"wrap","doc":null,"summary":null,"abstract":false,"args":[{"name":"tuple","doc":null,"default_value":"","external_name":"tuple","restriction":"NamedTuple"}],"args_string":"(tuple : NamedTuple)","args_html":"(tuple : NamedTuple)","location":{"filename":"src/json_on_steroids.cr","line_number":49,"url":"https://github.com/anykeyh/json_on_steroids/blob/9c43ff02a7c315290ba00a9257a88db0018124d7/src/json_on_steroids.cr#L49"},"def":{"name":"wrap","args":[{"name":"tuple","doc":null,"default_value":"","external_name":"tuple","restriction":"NamedTuple"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"raw = @raw = {} of String => self\ntuple.each do |k, v|\n  raw[k.to_s] = JSON::OnSteroids.new(v, self, k.to_s)\nend\n"}},{"id":"wrap(array:Array(T))forallT-instance-method","html_id":"wrap(array:Array(T))forallT-instance-method","name":"wrap","doc":null,"summary":null,"abstract":false,"args":[{"name":"array","doc":null,"default_value":"","external_name":"array","restriction":"Array(T)"}],"args_string":"(array : Array(T)) forall T","args_html":"(array : Array(T)) forall T","location":{"filename":"src/json_on_steroids.cr","line_number":57,"url":"https://github.com/anykeyh/json_on_steroids/blob/9c43ff02a7c315290ba00a9257a88db0018124d7/src/json_on_steroids.cr#L57"},"def":{"name":"wrap","args":[{"name":"array","doc":null,"default_value":"","external_name":"array","restriction":"Array(T)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"raw = @raw = Array(self).new(initial_capacity: array.size)\narray.each_with_index do |it, idx|\n  raw << (JSON::OnSteroids.new(it, self, idx))\nend\n"}},{"id":"wrap(hash:Hash(String,_))-instance-method","html_id":"wrap(hash:Hash(String,_))-instance-method","name":"wrap","doc":null,"summary":null,"abstract":false,"args":[{"name":"hash","doc":null,"default_value":"","external_name":"hash","restriction":"Hash(String, _)"}],"args_string":"(hash : Hash(String, _))","args_html":"(hash : Hash(String, _))","location":{"filename":"src/json_on_steroids.cr","line_number":41,"url":"https://github.com/anykeyh/json_on_steroids/blob/9c43ff02a7c315290ba00a9257a88db0018124d7/src/json_on_steroids.cr#L41"},"def":{"name":"wrap","args":[{"name":"hash","doc":null,"default_value":"","external_name":"hash","restriction":"Hash(String, _)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"raw = @raw = {} of String => self\nhash.each do |k, v|\n  raw[k] = JSON::OnSteroids.new(v, self, k)\nend\n"}}],"macros":[],"types":[{"html_id":"json_on_steroids/JSON/OnSteroids/Access","path":"JSON/OnSteroids/Access.html","kind":"module","full_name":"JSON::OnSteroids::Access","name":"Access","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/json_on_steroids/access.cr","line_number":2,"url":"https://github.com/anykeyh/json_on_steroids/blob/9c43ff02a7c315290ba00a9257a88db0018124d7/src/json_on_steroids/access.cr#L2"}],"repository_name":"json_on_steroids","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"json_on_steroids/JSON/OnSteroids","kind":"class","full_name":"JSON::OnSteroids","name":"OnSteroids"}],"namespace":{"html_id":"json_on_steroids/JSON/OnSteroids","kind":"class","full_name":"JSON::OnSteroids","name":"OnSteroids"},"doc":"Access and mutate values","summary":"<p>Access and mutate values</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"<<(value)-instance-method","html_id":"<<(value)-instance-method","name":"<<","doc":"Assume the current mutable is an array and append a value at the end.","summary":"<p>Assume the current mutable is an array and append a value at the end.</p>","abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"args_string":"(value)","args_html":"(value)","location":{"filename":"src/json_on_steroids/access.cr","line_number":35,"url":"https://github.com/anykeyh/json_on_steroids/blob/9c43ff02a7c315290ba00a9257a88db0018124d7/src/json_on_steroids/access.cr#L35"},"def":{"name":"<<","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if arr = as_arr?\n  obj = JSON::OnSteroids.new(value)\n  arr << obj\n  self.dirty!\nelse\n  raise(\"Cannot set: #{path} is not an Array.\")\nend"}},{"id":"[](key:Int)-instance-method","html_id":"[](key:Int)-instance-method","name":"[]","doc":"Assume the current mutable is an array and return the value at the key offset.","summary":"<p>Assume the current mutable is an array and return the value at the key offset.</p>","abstract":false,"args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"Int"}],"args_string":"(key : Int)","args_html":"(key : Int)","location":{"filename":"src/json_on_steroids/access.cr","line_number":46,"url":"https://github.com/anykeyh/json_on_steroids/blob/9c43ff02a7c315290ba00a9257a88db0018124d7/src/json_on_steroids/access.cr#L46"},"def":{"name":"[]","args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if arr = as_arr?\n  arr[key]\nelse\n  raise(\"Cannot fetch: #{path} is not an Array.\")\nend"}},{"id":"[](key:String)-instance-method","html_id":"[](key:String)-instance-method","name":"[]","doc":"Assume the current mutable is an hash and return the value under the key","summary":"<p>Assume the current mutable is an hash and return the value under the key</p>","abstract":false,"args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"String"}],"args_string":"(key : String)","args_html":"(key : String)","location":{"filename":"src/json_on_steroids/access.cr","line_number":55,"url":"https://github.com/anykeyh/json_on_steroids/blob/9c43ff02a7c315290ba00a9257a88db0018124d7/src/json_on_steroids/access.cr#L55"},"def":{"name":"[]","args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"fetch(key) do\n  raise(\"Key not found: #{key} (in `#{path}`)\")\nend"}},{"id":"[]=(key:String,value)-instance-method","html_id":"[]=(key:String,value)-instance-method","name":"[]=","doc":"Assume the current mutable is an hash and set a value to a given key.","summary":"<p>Assume the current mutable is an hash and set a value to a given key.</p>","abstract":false,"args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"String"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"args_string":"(key : String, value)","args_html":"(key : String, value)","location":{"filename":"src/json_on_steroids/access.cr","line_number":4,"url":"https://github.com/anykeyh/json_on_steroids/blob/9c43ff02a7c315290ba00a9257a88db0018124d7/src/json_on_steroids/access.cr#L4"},"def":{"name":"[]=","args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"String"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"h = as_h\nobj = JSON::OnSteroids.new(value, self, key)\nobj.dirty!\nh[key] = obj\n"}},{"id":"[]=(key:Int,value)-instance-method","html_id":"[]=(key:Int,value)-instance-method","name":"[]=","doc":"Assume the current mutable is an array and set a value to a given key.","summary":"<p>Assume the current mutable is an array and set a value to a given key.</p>","abstract":false,"args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"Int"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"args_string":"(key : Int, value)","args_html":"(key : Int, value)","location":{"filename":"src/json_on_steroids/access.cr","line_number":12,"url":"https://github.com/anykeyh/json_on_steroids/blob/9c43ff02a7c315290ba00a9257a88db0018124d7/src/json_on_steroids/access.cr#L12"},"def":{"name":"[]=","args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"Int"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if arr = as_arr?\n  obj = JSON::OnSteroids.new(value, self, key)\n  arr[key] = obj\n  self.dirty!\nelse\n  raise(\"Cannot set: #{path} is not an Array.\")\nend"}},{"id":"[]?(key:String)-instance-method","html_id":"[]?(key:String)-instance-method","name":"[]?","doc":"Assume the current mutable is an hash and return the value under the key, if any.","summary":"<p>Assume the current mutable is an hash and return the value under the key, if any.</p>","abstract":false,"args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"String"}],"args_string":"(key : String)","args_html":"(key : String)","location":{"filename":"src/json_on_steroids/access.cr","line_number":60,"url":"https://github.com/anykeyh/json_on_steroids/blob/9c43ff02a7c315290ba00a9257a88db0018124d7/src/json_on_steroids/access.cr#L60"},"def":{"name":"[]?","args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"fetch(key) do\n  nil\nend"}},{"id":"create_arr(key:String|Int)-instance-method","html_id":"create_arr(key:String|Int)-instance-method","name":"create_arr","doc":"Create empty array for a specific key","summary":"<p>Create empty array for a specific key</p>","abstract":false,"args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"String | Int"}],"args_string":"(key : String | Int)","args_html":"(key : String | Int)","location":{"filename":"src/json_on_steroids/access.cr","line_number":23,"url":"https://github.com/anykeyh/json_on_steroids/blob/9c43ff02a7c315290ba00a9257a88db0018124d7/src/json_on_steroids/access.cr#L23"},"def":{"name":"create_arr","args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"String | Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self[key] = [] of JSON::OnSteroids\nself[key]\n"}},{"id":"create_obj(key:String|Int)-instance-method","html_id":"create_obj(key:String|Int)-instance-method","name":"create_obj","doc":"Create empty obj at a specific key","summary":"<p>Create empty obj at a specific key</p>","abstract":false,"args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"String | Int"}],"args_string":"(key : String | Int)","args_html":"(key : String | Int)","location":{"filename":"src/json_on_steroids/access.cr","line_number":29,"url":"https://github.com/anykeyh/json_on_steroids/blob/9c43ff02a7c315290ba00a9257a88db0018124d7/src/json_on_steroids/access.cr#L29"},"def":{"name":"create_obj","args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"String | Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self[key] = {} of String => JSON::OnSteroids\nself[key]\n"}},{"id":"fetch(key:String,&)-instance-method","html_id":"fetch(key:String,&)-instance-method","name":"fetch","doc":null,"summary":null,"abstract":false,"args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"String"}],"args_string":"(key : String, &)","args_html":"(key : String, &)","location":{"filename":"src/json_on_steroids/access.cr","line_number":64,"url":"https://github.com/anykeyh/json_on_steroids/blob/9c43ff02a7c315290ba00a9257a88db0018124d7/src/json_on_steroids/access.cr#L64"},"def":{"name":"fetch","args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":0,"block_arg":null,"return_type":"","visibility":"Public","body":"if hash = as_h?\nelse\n  raise(\"Error accessing #{key}: The parent `#{path}` is not an object\")\nend\nhash.fetch(key) do\n  yield\nend\n"}}],"macros":[],"types":[]},{"html_id":"json_on_steroids/JSON/OnSteroids/AuthorizedSetTypes","path":"JSON/OnSteroids/AuthorizedSetTypes.html","kind":"alias","full_name":"JSON::OnSteroids::AuthorizedSetTypes","name":"AuthorizedSetTypes","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/json_on_steroids.cr","line_number":23,"url":"https://github.com/anykeyh/json_on_steroids/blob/9c43ff02a7c315290ba00a9257a88db0018124d7/src/json_on_steroids.cr#L23"}],"repository_name":"json_on_steroids","program":false,"enum":false,"alias":true,"aliased":"(Array(JSON::OnSteroids) | Bool | Float32 | Float64 | Hash(String, JSON::OnSteroids) | Int32 | Int64 | JSON::Any | JSON::OnSteroids | String | Time | Nil)","aliased_html":"Array(<a href=\"../../JSON/OnSteroids.html\">JSON::OnSteroids</a>) | Bool | Float32 | Float64 | Hash(String, <a href=\"../../JSON/OnSteroids.html\">JSON::OnSteroids</a>) | Int32 | Int64 | <a href=\"../../JSON/Any.html\">JSON::Any</a> | <a href=\"../../JSON/OnSteroids.html\">JSON::OnSteroids</a> | String | Time | Nil","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"json_on_steroids/JSON/OnSteroids","kind":"class","full_name":"JSON::OnSteroids","name":"OnSteroids"},"doc":"Authorized input used in []=, constructor and set","summary":"<p>Authorized input used in []=, constructor and set</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"json_on_steroids/JSON/OnSteroids/Dirty","path":"JSON/OnSteroids/Dirty.html","kind":"module","full_name":"JSON::OnSteroids::Dirty","name":"Dirty","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/json_on_steroids/dirty.cr","line_number":1,"url":"https://github.com/anykeyh/json_on_steroids/blob/9c43ff02a7c315290ba00a9257a88db0018124d7/src/json_on_steroids/dirty.cr#L1"}],"repository_name":"json_on_steroids","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"json_on_steroids/JSON/OnSteroids","kind":"class","full_name":"JSON::OnSteroids","name":"OnSteroids"}],"namespace":{"html_id":"json_on_steroids/JSON/OnSteroids","kind":"class","full_name":"JSON::OnSteroids","name":"OnSteroids"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"clean!-instance-method","html_id":"clean!-instance-method","name":"clean!","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/json_on_steroids/dirty.cr","line_number":33,"url":"https://github.com/anykeyh/json_on_steroids/blob/9c43ff02a7c315290ba00a9257a88db0018124d7/src/json_on_steroids/dirty.cr#L33"},"def":{"name":"clean!","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if dirty?\nelse\n  return\nend\n@dirty = false\nif h = as_h?\n  h.each_value(&.clean!)\nelse\n  if arr = as_arr?\n    arr.each(&.clean!)\n  end\nend\n"}},{"id":"dirty!-instance-method","html_id":"dirty!-instance-method","name":"dirty!","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/json_on_steroids/dirty.cr","line_number":4,"url":"https://github.com/anykeyh/json_on_steroids/blob/9c43ff02a7c315290ba00a9257a88db0018124d7/src/json_on_steroids/dirty.cr#L4"},"def":{"name":"dirty!","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if @dirty\nelse\n  @dirty = true\n  parent.try(&.dirty!)\nend"}},{"id":"dirty?:Bool-instance-method","html_id":"dirty?:Bool-instance-method","name":"dirty?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","args_html":" : Bool","location":{"filename":"src/json_on_steroids/dirty.cr","line_number":2,"url":"https://github.com/anykeyh/json_on_steroids/blob/9c43ff02a7c315290ba00a9257a88db0018124d7/src/json_on_steroids/dirty.cr#L2"},"def":{"name":"dirty?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"@dirty"}},{"id":"dirty_only-instance-method","html_id":"dirty_only-instance-method","name":"dirty_only","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/json_on_steroids/dirty.cr","line_number":12,"url":"https://github.com/anykeyh/json_on_steroids/blob/9c43ff02a7c315290ba00a9257a88db0018124d7/src/json_on_steroids/dirty.cr#L12"},"def":{"name":"dirty_only","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if @dirty\n  if h = as_h?\n    out = JSON::OnSteroids.new\n    h.each do |k, v|\n      val = v.dirty_only\n      if val\n        out[k] = val.dup\n      end\n    end\n    out\n  else\n    if arr = as_arr?\n      JSON::OnSteroids.new(arr.map do |__arg1|\n        __arg1.dirty_only.as(JSON::OnSteroids | Nil)\n      end.compact)\n    else\n      self.dup\n    end\n  end\nelse\n  nil\nend"}}],"macros":[],"types":[]},{"html_id":"json_on_steroids/JSON/OnSteroids/Exception","path":"JSON/OnSteroids/Exception.html","kind":"class","full_name":"JSON::OnSteroids::Exception","name":"Exception","abstract":false,"superclass":{"html_id":"json_on_steroids/Exception","kind":"class","full_name":"Exception","name":"Exception"},"ancestors":[{"html_id":"json_on_steroids/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"json_on_steroids/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"json_on_steroids/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/json_on_steroids/errors.cr","line_number":1,"url":"https://github.com/anykeyh/json_on_steroids/blob/9c43ff02a7c315290ba00a9257a88db0018124d7/src/json_on_steroids/errors.cr#L1"}],"repository_name":"json_on_steroids","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"json_on_steroids/JSON/OnSteroids/KeyNotFoundException","kind":"class","full_name":"JSON::OnSteroids::KeyNotFoundException","name":"KeyNotFoundException"},{"html_id":"json_on_steroids/JSON/OnSteroids/NotAnArray","kind":"class","full_name":"JSON::OnSteroids::NotAnArray","name":"NotAnArray"},{"html_id":"json_on_steroids/JSON/OnSteroids/NotAnObject","kind":"class","full_name":"JSON::OnSteroids::NotAnObject","name":"NotAnObject"}],"including_types":[],"namespace":{"html_id":"json_on_steroids/JSON/OnSteroids","kind":"class","full_name":"JSON::OnSteroids","name":"OnSteroids"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"json_on_steroids/JSON/OnSteroids/InPlace","path":"JSON/OnSteroids/InPlace.html","kind":"module","full_name":"JSON::OnSteroids::InPlace","name":"InPlace","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/json_on_steroids/in_place.cr","line_number":1,"url":"https://github.com/anykeyh/json_on_steroids/blob/9c43ff02a7c315290ba00a9257a88db0018124d7/src/json_on_steroids/in_place.cr#L1"}],"repository_name":"json_on_steroids","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"json_on_steroids/JSON/OnSteroids","kind":"class","full_name":"JSON::OnSteroids","name":"OnSteroids"}],"namespace":{"html_id":"json_on_steroids/JSON/OnSteroids","kind":"class","full_name":"JSON::OnSteroids","name":"OnSteroids"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"delete(key:Int|String|Nil)-instance-method","html_id":"delete(key:Int|String|Nil)-instance-method","name":"delete","doc":null,"summary":null,"abstract":false,"args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"Int | String | Nil"}],"args_string":"(key : Int | String | Nil)","args_html":"(key : Int | String | Nil)","location":{"filename":"src/json_on_steroids/in_place.cr","line_number":34,"url":"https://github.com/anykeyh/json_on_steroids/blob/9c43ff02a7c315290ba00a9257a88db0018124d7/src/json_on_steroids/in_place.cr#L34"},"def":{"name":"delete","args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"Int | String | Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if arr = as_arr?\n  elm = arr[key.as(Int)]\n  arr.delete_at(key.as(Int))\nelse\n  if h = as_h?\n    elm = h[key.as(String)]\n    h.delete(key.as(String))\n  else\n    raise(\"Cannot delete key `#{@key}`: not and object or an array\")\n  end\nend\ndirty!\nelm\n"}},{"id":"delete-instance-method","html_id":"delete-instance-method","name":"delete","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/json_on_steroids/in_place.cr","line_number":50,"url":"https://github.com/anykeyh/json_on_steroids/blob/9c43ff02a7c315290ba00a9257a88db0018124d7/src/json_on_steroids/in_place.cr#L50"},"def":{"name":"delete","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if (parent = self.parent)\nelse\n  raise(\"Cannot delete the root document\")\nend\nparent.delete(key)\n@parent = @key = nil\nself\n"}},{"id":"set(value)-instance-method","html_id":"set(value)-instance-method","name":"set","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"args_string":"(value)","args_html":"(value)","location":{"filename":"src/json_on_steroids/in_place.cr","line_number":3,"url":"https://github.com/anykeyh/json_on_steroids/blob/9c43ff02a7c315290ba00a9257a88db0018124d7/src/json_on_steroids/in_place.cr#L3"},"def":{"name":"set","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@raw = (JSON::OnSteroids.new(value)).raw\nself.dirty!\nself\n"}},{"id":"set(&)-instance-method","html_id":"set(&)-instance-method","name":"set","doc":"Mutate in place a value.\n\nExample:\n\n```\n  # increment by one a visitor counter\n  json.dig(\"data.visitors.count\").set(&.as_i.+(1))\n```\n\nOther example:\n\n```\n json[\"some\"][\"array\"].as_arr.each{ |x| x.set(\"Hellow #{x.to_s}\") }\n```\n\nAny authorized value can be passed (see JSON::Any::Mutable::AuthorizedSetTypes)","summary":"<p>Mutate in place a value.</p>","abstract":false,"args":[],"args_string":"(&)","args_html":"(&)","location":{"filename":"src/json_on_steroids/in_place.cr","line_number":26,"url":"https://github.com/anykeyh/json_on_steroids/blob/9c43ff02a7c315290ba00a9257a88db0018124d7/src/json_on_steroids/in_place.cr#L26"},"def":{"name":"set","args":[],"double_splat":null,"splat_index":null,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"@raw = (JSON::OnSteroids.new(yield self)).raw\nself.dirty!\nself\n"}}],"macros":[],"types":[]},{"html_id":"json_on_steroids/JSON/OnSteroids/KeyNotFoundException","path":"JSON/OnSteroids/KeyNotFoundException.html","kind":"class","full_name":"JSON::OnSteroids::KeyNotFoundException","name":"KeyNotFoundException","abstract":false,"superclass":{"html_id":"json_on_steroids/JSON/OnSteroids/Exception","kind":"class","full_name":"JSON::OnSteroids::Exception","name":"Exception"},"ancestors":[{"html_id":"json_on_steroids/JSON/OnSteroids/Exception","kind":"class","full_name":"JSON::OnSteroids::Exception","name":"Exception"},{"html_id":"json_on_steroids/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"json_on_steroids/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"json_on_steroids/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/json_on_steroids/errors.cr","line_number":4,"url":"https://github.com/anykeyh/json_on_steroids/blob/9c43ff02a7c315290ba00a9257a88db0018124d7/src/json_on_steroids/errors.cr#L4"}],"repository_name":"json_on_steroids","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"json_on_steroids/JSON/OnSteroids","kind":"class","full_name":"JSON::OnSteroids","name":"OnSteroids"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"json_on_steroids/JSON/OnSteroids/MergeOperations","path":"JSON/OnSteroids/MergeOperations.html","kind":"module","full_name":"JSON::OnSteroids::MergeOperations","name":"MergeOperations","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/json_on_steroids/merge_operations.cr","line_number":1,"url":"https://github.com/anykeyh/json_on_steroids/blob/9c43ff02a7c315290ba00a9257a88db0018124d7/src/json_on_steroids/merge_operations.cr#L1"}],"repository_name":"json_on_steroids","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"json_on_steroids/JSON/OnSteroids","kind":"class","full_name":"JSON::OnSteroids","name":"OnSteroids"}],"namespace":{"html_id":"json_on_steroids/JSON/OnSteroids","kind":"class","full_name":"JSON::OnSteroids","name":"OnSteroids"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"%(t:Enumerable)-instance-method","html_id":"%(t:Enumerable)-instance-method","name":"%","doc":"return a JSON object containing only the JSON fields requested in the argument enumerable\n\n```\n  json = JSON.parse(%<{\"a\": 1, \"b\": 2, \"c\": [1,2,3]}>).on_steroid\n  json = json % {\"a\", \"b\"} # => {\"a\": 1, \"b\": 2}\n```","summary":"<p>return a JSON object containing only the JSON fields requested in the argument enumerable</p>","abstract":false,"args":[{"name":"t","doc":null,"default_value":"","external_name":"t","restriction":"Enumerable"}],"args_string":"(t : Enumerable)","args_html":"(t : Enumerable)","location":{"filename":"src/json_on_steroids/merge_operations.cr","line_number":9,"url":"https://github.com/anykeyh/json_on_steroids/blob/9c43ff02a7c315290ba00a9257a88db0018124d7/src/json_on_steroids/merge_operations.cr#L9"},"def":{"name":"%","args":[{"name":"t","doc":null,"default_value":"","external_name":"t","restriction":"Enumerable"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"json = JSON::OnSteroids.new\nh = self.as_h\nt.each do |key|\n  key = key.to_s\n  if val = h[key]?\n    json[key] = val.raw\n  end\nend\njson\n"}},{"id":"-(t:Enumerable)-instance-method","html_id":"-(t:Enumerable)-instance-method","name":"-","doc":"return a JSON object removing the JSON fields defined by the argument enumerable\n\n```\n  json = JSON.parse(%<{\"user\": \"yacine\", \"password\": \"helloworld\"}>).on_steroid\n  json = json - {:password} # => {\"a\": 1, \"b\": 2}\n```","summary":"<p>return a JSON object removing the JSON fields defined by the argument enumerable</p>","abstract":false,"args":[{"name":"t","doc":null,"default_value":"","external_name":"t","restriction":"Enumerable"}],"args_string":"(t : Enumerable)","args_html":"(t : Enumerable)","location":{"filename":"src/json_on_steroids/merge_operations.cr","line_number":29,"url":"https://github.com/anykeyh/json_on_steroids/blob/9c43ff02a7c315290ba00a9257a88db0018124d7/src/json_on_steroids/merge_operations.cr#L29"},"def":{"name":"-","args":[{"name":"t","doc":null,"default_value":"","external_name":"t","restriction":"Enumerable"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"h = self.as_h.dup\nt.each do |key|\n  h.delete(key.to_s)\nend\nJSON::OnSteroids.new(h)\n"}},{"id":"merge(x:NamedTuple)-instance-method","html_id":"merge(x:NamedTuple)-instance-method","name":"merge","doc":null,"summary":null,"abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"NamedTuple"}],"args_string":"(x : NamedTuple)","args_html":"(x : NamedTuple)","location":{"filename":"src/json_on_steroids/merge_operations.cr","line_number":42,"url":"https://github.com/anykeyh/json_on_steroids/blob/9c43ff02a7c315290ba00a9257a88db0018124d7/src/json_on_steroids/merge_operations.cr#L42"},"def":{"name":"merge","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"NamedTuple"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"json = JSON::OnSteroids.new(self)\nx.each do |k, v|\n  json[k.to_s] = v\nend\njson\n"}},{"id":"merge(x:JSON::OnSteroids|JSON::Any)-instance-method","html_id":"merge(x:JSON::OnSteroids|JSON::Any)-instance-method","name":"merge","doc":null,"summary":null,"abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"JSON::OnSteroids | JSON::Any"}],"args_string":"(x : JSON::OnSteroids | JSON::Any)","args_html":"(x : <a href=\"../../JSON/OnSteroids.html\">JSON::OnSteroids</a> | <a href=\"../../JSON/Any.html\">JSON::Any</a>)","location":{"filename":"src/json_on_steroids/merge_operations.cr","line_number":53,"url":"https://github.com/anykeyh/json_on_steroids/blob/9c43ff02a7c315290ba00a9257a88db0018124d7/src/json_on_steroids/merge_operations.cr#L53"},"def":{"name":"merge","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"JSON::OnSteroids | JSON::Any"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"json = JSON::OnSteroids.new(self)\nx.as_h.each do |k, v|\n  json[k.to_s] = v\nend\njson\n"}},{"id":"merge!(x:NamedTuple)-instance-method","html_id":"merge!(x:NamedTuple)-instance-method","name":"merge!","doc":null,"summary":null,"abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"NamedTuple"}],"args_string":"(x : NamedTuple)","args_html":"(x : NamedTuple)","location":{"filename":"src/json_on_steroids/merge_operations.cr","line_number":37,"url":"https://github.com/anykeyh/json_on_steroids/blob/9c43ff02a7c315290ba00a9257a88db0018124d7/src/json_on_steroids/merge_operations.cr#L37"},"def":{"name":"merge!","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"NamedTuple"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"x.each do |k, v|\n  self[k.to_s] = v\nend\nself\n"}},{"id":"merge!(x:JSON::OnSteroids|JSON::Any)-instance-method","html_id":"merge!(x:JSON::OnSteroids|JSON::Any)-instance-method","name":"merge!","doc":null,"summary":null,"abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"JSON::OnSteroids | JSON::Any"}],"args_string":"(x : JSON::OnSteroids | JSON::Any)","args_html":"(x : <a href=\"../../JSON/OnSteroids.html\">JSON::OnSteroids</a> | <a href=\"../../JSON/Any.html\">JSON::Any</a>)","location":{"filename":"src/json_on_steroids/merge_operations.cr","line_number":48,"url":"https://github.com/anykeyh/json_on_steroids/blob/9c43ff02a7c315290ba00a9257a88db0018124d7/src/json_on_steroids/merge_operations.cr#L48"},"def":{"name":"merge!","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"JSON::OnSteroids | JSON::Any"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"x.as_h.each do |k, v|\n  self[k.to_s] = v\nend\nself\n"}}],"macros":[],"types":[]},{"html_id":"json_on_steroids/JSON/OnSteroids/NotAnArray","path":"JSON/OnSteroids/NotAnArray.html","kind":"class","full_name":"JSON::OnSteroids::NotAnArray","name":"NotAnArray","abstract":false,"superclass":{"html_id":"json_on_steroids/JSON/OnSteroids/Exception","kind":"class","full_name":"JSON::OnSteroids::Exception","name":"Exception"},"ancestors":[{"html_id":"json_on_steroids/JSON/OnSteroids/Exception","kind":"class","full_name":"JSON::OnSteroids::Exception","name":"Exception"},{"html_id":"json_on_steroids/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"json_on_steroids/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"json_on_steroids/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/json_on_steroids/errors.cr","line_number":6,"url":"https://github.com/anykeyh/json_on_steroids/blob/9c43ff02a7c315290ba00a9257a88db0018124d7/src/json_on_steroids/errors.cr#L6"}],"repository_name":"json_on_steroids","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"json_on_steroids/JSON/OnSteroids","kind":"class","full_name":"JSON::OnSteroids","name":"OnSteroids"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"json_on_steroids/JSON/OnSteroids/NotAnObject","path":"JSON/OnSteroids/NotAnObject.html","kind":"class","full_name":"JSON::OnSteroids::NotAnObject","name":"NotAnObject","abstract":false,"superclass":{"html_id":"json_on_steroids/JSON/OnSteroids/Exception","kind":"class","full_name":"JSON::OnSteroids::Exception","name":"Exception"},"ancestors":[{"html_id":"json_on_steroids/JSON/OnSteroids/Exception","kind":"class","full_name":"JSON::OnSteroids::Exception","name":"Exception"},{"html_id":"json_on_steroids/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"json_on_steroids/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"json_on_steroids/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/json_on_steroids/errors.cr","line_number":8,"url":"https://github.com/anykeyh/json_on_steroids/blob/9c43ff02a7c315290ba00a9257a88db0018124d7/src/json_on_steroids/errors.cr#L8"}],"repository_name":"json_on_steroids","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"json_on_steroids/JSON/OnSteroids","kind":"class","full_name":"JSON::OnSteroids","name":"OnSteroids"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"json_on_steroids/JSON/OnSteroids/RawWrappedValue","path":"JSON/OnSteroids/RawWrappedValue.html","kind":"alias","full_name":"JSON::OnSteroids::RawWrappedValue","name":"RawWrappedValue","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/json_on_steroids.cr","line_number":20,"url":"https://github.com/anykeyh/json_on_steroids/blob/9c43ff02a7c315290ba00a9257a88db0018124d7/src/json_on_steroids.cr#L20"}],"repository_name":"json_on_steroids","program":false,"enum":false,"alias":true,"aliased":"(Array(JSON::OnSteroids) | Bool | Float32 | Float64 | Hash(String, JSON::OnSteroids) | Int32 | Int64 | String | Time | Nil)","aliased_html":"Array(<a href=\"../../JSON/OnSteroids.html\">JSON::OnSteroids</a>) | Bool | Float32 | Float64 | Hash(String, <a href=\"../../JSON/OnSteroids.html\">JSON::OnSteroids</a>) | Int32 | Int64 | String | Time | Nil","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"json_on_steroids/JSON/OnSteroids","kind":"class","full_name":"JSON::OnSteroids","name":"OnSteroids"},"doc":"Combination of WrappedPrimitive, Array and Hash","summary":"<p>Combination of WrappedPrimitive, Array and Hash</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"json_on_steroids/JSON/OnSteroids/Searchable","path":"JSON/OnSteroids/Searchable.html","kind":"module","full_name":"JSON::OnSteroids::Searchable","name":"Searchable","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/json_on_steroids/searchable.cr","line_number":2,"url":"https://github.com/anykeyh/json_on_steroids/blob/9c43ff02a7c315290ba00a9257a88db0018124d7/src/json_on_steroids/searchable.cr#L2"}],"repository_name":"json_on_steroids","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"json_on_steroids/JSON/OnSteroids","kind":"class","full_name":"JSON::OnSteroids","name":"OnSteroids"}],"namespace":{"html_id":"json_on_steroids/JSON/OnSteroids","kind":"class","full_name":"JSON::OnSteroids","name":"OnSteroids"},"doc":"Search a key (will be improved in next releases)","summary":"<p>Search a key (will be improved in next releases)</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"dig(key:String):JSON::OnSteroids-instance-method","html_id":"dig(key:String):JSON::OnSteroids-instance-method","name":"dig","doc":"Explore the json until a key is found.\n\n```\n  json.dig(\"a.b.c\") # json[\"a\"][\"b\"][\"c\"]\n```\n\nIntegers in the dig path are working on both hash and arrays:\n\n```\n json = JSON::OnSteroids.new(a: [\"b\", \"c\"])\n json.dig(\"a.0\").as_s #return \"b\"\n```\n\nIn case your key contains a dot `.`, you may want to escape it, using `\\`:\n\n```\n  json.dig(\"a\\\\.b\") #< equivalent to json[\"a.b\"]\n```\n\nTo mutate straight from dig, please check `set` method","summary":"<p>Explore the json until a key is found.</p>","abstract":false,"args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"String"}],"args_string":"(key : String) : JSON::OnSteroids","args_html":"(key : String) : <a href=\"../../JSON/OnSteroids.html\">JSON::OnSteroids</a>","location":{"filename":"src/json_on_steroids/searchable.cr","line_number":23,"url":"https://github.com/anykeyh/json_on_steroids/blob/9c43ff02a7c315290ba00a9257a88db0018124d7/src/json_on_steroids/searchable.cr#L23"},"def":{"name":"dig","args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"JSON::OnSteroids","visibility":"Public","body":"if value = dig?(key)\nelse\n  raise(JSON::OnSteroids::Exception.new(\"JSON::OnSteroids#dig: key not found: `#{key}`\"))\nend\nvalue\n"}},{"id":"dig?(key:String):JSON::OnSteroids?-instance-method","html_id":"dig?(key:String):JSON::OnSteroids?-instance-method","name":"dig?","doc":null,"summary":null,"abstract":false,"args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"String"}],"args_string":"(key : String) : JSON::OnSteroids?","args_html":"(key : String) : <a href=\"../../JSON/OnSteroids.html\">JSON::OnSteroids</a>?","location":{"filename":"src/json_on_steroids/searchable.cr","line_number":28,"url":"https://github.com/anykeyh/json_on_steroids/blob/9c43ff02a7c315290ba00a9257a88db0018124d7/src/json_on_steroids/searchable.cr#L28"},"def":{"name":"dig?","args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"JSON::OnSteroids | ::Nil","visibility":"Public","body":"mem = IO::Memory.new(key)\ndig?(mem)\n"}},{"id":"path(arr=[]ofString)-instance-method","html_id":"path(arr=[]ofString)-instance-method","name":"path","doc":"Return the current path of this mutable object.\nIf the current object is the root object, return empty string.\n\n```\n json[\"a\"][\"b\"][\"c\"].path # => \"a.b.c\"\n json.path # => \"\"\n```","summary":"<p>Return the current path of this mutable object.</p>","abstract":false,"args":[{"name":"arr","doc":null,"default_value":"[] of String","external_name":"arr","restriction":""}],"args_string":"(arr = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">String</span>)","args_html":"(arr = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">String</span>)","location":{"filename":"src/json_on_steroids/searchable.cr","line_number":70,"url":"https://github.com/anykeyh/json_on_steroids/blob/9c43ff02a7c315290ba00a9257a88db0018124d7/src/json_on_steroids/searchable.cr#L70"},"def":{"name":"path","args":[{"name":"arr","doc":null,"default_value":"[] of String","external_name":"arr","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if parent = @parent\n  parent.path(arr)\nelse\n  arr << @key.to_s\n  arr.reverse.join(\".\")\nend"}}],"macros":[],"types":[]},{"html_id":"json_on_steroids/JSON/OnSteroids/WrappedPrimitive","path":"JSON/OnSteroids/WrappedPrimitive.html","kind":"alias","full_name":"JSON::OnSteroids::WrappedPrimitive","name":"WrappedPrimitive","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/json_on_steroids.cr","line_number":17,"url":"https://github.com/anykeyh/json_on_steroids/blob/9c43ff02a7c315290ba00a9257a88db0018124d7/src/json_on_steroids.cr#L17"}],"repository_name":"json_on_steroids","program":false,"enum":false,"alias":true,"aliased":"(Bool | Float32 | Float64 | Int32 | Int64 | String | Time | Nil)","aliased_html":"Bool | Float32 | Float64 | Int32 | Int64 | String | Time | Nil","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"json_on_steroids/JSON/OnSteroids","kind":"class","full_name":"JSON::OnSteroids","name":"OnSteroids"},"doc":"Wrapped content","summary":"<p>Wrapped content</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]}]}]}]}})